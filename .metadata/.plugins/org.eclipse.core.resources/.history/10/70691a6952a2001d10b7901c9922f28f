package LinkedList;
import java.util.*;

public class Queue {
       
	 static class queue{
		 static int arr[];
		 static int size;
	     static int rear = -1;
		 
		 queue(int n){
			 arr=new int[n];
			 this.size=n;
		 }
	 }
	 
	 //isEmpty
     public static boolean isempty() {
		 return rear==-1;
	 }
	 
	 //Enqueue
	 public static void add(int data) {
		 if(rear == size-1) {
			 System.out.println("Queue is Full");
			 return;
		 }
		 rear++;
		 arr[rear]=data;
	 }
	 
	 //Dequeue
	 public static int remove() {
		 if(isempty()) {
			 System.out.println("Queue is Empty");
			 return -1;
			 }
		 
		 int front=arr[0];
		 for(int i=0;i<rear;i++) {
			 arr[i]=arr[i+1];
		 }
		 rear--;
		 return front;
	 }
	 
	 //Peek
	 public static int peek() {
		 if(isempty()) {
			 System.out.println("Queue is Empty");
			 return -1;
			 }
		 return arr[0];
	 }
	 
	public static void main(String[] args) {
		queue q=new queue();
		q.add(1);
		q.add(2);
		q.add(3);
		
		while(!q.isempty()) {
			System.out.println(q.peek());
			q.remove();
		}

	}

}
