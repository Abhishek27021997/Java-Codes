import java.util.*;

public class DLL {

	Node head;
	Node tail;
	
	class Node{
		int data;
		Node next;
		Node prev;
		
		Node(int data){
			this.data=data;
			this.next=null;
			this.prev=null;
		}
	}
	
	public void addfirst(int data) {
		Node newnode= new Node(data);
		if(head==null) {
			head=newnode;
			tail=newnode;
			return;
		}
		newnode.next=head;
		head.prev=newnode;
		head=newnode;
	}
	
	public void addlast(int data) {

		Node newnode= new Node(data);
		if(head==null) {
			head=newnode;
			tail=newnode;
			return;
		}
     	 Node currnode=tail;
		 currnode.next=newnode;
		 newnode.prev=tail;
		 tail=newnode;
	}
	
	
	public void InsertAtPosition(int data) {
		Node newnode= new Node(data);
		if(head==null) {
			head=newnode;
			tail=newnode;
			return;
		}
		Node currnode=head;
		Node ptr=head.next;
		for(int i=1;i<2;i++) {
			currnode=currnode.next;
			ptr=ptr.next;
		}
		newnode.prev=currnode;
		newnode.next=ptr;
		currnode.next=newnode;
		ptr.prev=newnode;
		
	}
	
	
	public void deletefirst(){
		head=head.next;
		
	}
	
	public void deletelast() {
		if(head.next==null) {
			head=null;
			return;
		}
		Node currnode=tail;
		currnode=currnode.prev;
		currnode.next=null;
		}
	
	public void deleteAtPosition() {
		Node firstnode=head;
		Node secondnode=head.next;
		for(int i=1;i<1;i++) {
			firstnode=firstnode.next;
			secondnode=secondnode.next;
		}
		firstnode.next=secondnode.next;
		secondnode.prev=firstnode;
		
	}
	
	
	public void printlist() {
		if(head==null) {
			System.out.println("List is Empty");
			return;
		}
		Node currnode=head;
		while(currnode!=null) {
			System.out.print(currnode.data + " > ");
			currnode=currnode.next;
		}
		System.out.println();
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
        DLL obj=new DLL();
        obj.addfirst(20);
        obj.addfirst(10);
        obj.printlist();
        
        obj.addlast(40);
        obj.printlist();
        
        obj.InsertAtPosition(30);
        obj.printlist();
        
        obj.deletefirst();
        obj.printlist();
        
        obj.deletelast();
        obj.printlist();
        
        obj.deleteAtPosition();
        obj.printlist();
	}

}
